<h1> Results </h1>
<p>Total selections made: <%= @total_selections %>
<h2>Overall</h2>
<table class="table table-striped">
  <tr>
    <th>engine</th>
    <th>total times participating</th>
    <th>wins</th>
    <th>losses</th>
    <th>ties</th>
    <th>Victory rate <small>disregards ties: wins / (wins + losses)</small></th>
    <th>z value (sig diff than 50%?)</th>
  </tr>

<% @results.each do |row| %>
  <tr>
    <td><%= row["engine"] %> </td>
    <td><%= row["total_selections"] %></td>
    <td><%= row["wins"] %> </td>
    <td><%= row["losses"] %> </td>
    <td><%= row["ties"] %> </td>
    <td> <%= number_to_percentage( victory_rate(row), :precision => 0 )%> </td>
    <td> <%= "%.2f" % one_sample_z_test( victory_rate(row) / 100, row["wins"].to_i + row["losses"].to_i ) %></th>
  </tr>
<% end %>

</table>

<h2> Match-up cross-tab </h2>
<table class="crosstab table table-striped">
  <tr>
    <th>vs.</th>
    <% @match_up_keys.each do |engine| %>
    <th><%= engine %> </th>
    <% end %>
  <tr>
  
  
  <% @match_up_keys.each do |engine| %>
    <tr>
      <th><%= engine %> </th>
        <% @match_up_keys.each do |second_engine| %>                      
          <td>
            <% if engine == second_engine %>
              *
            <% else %>
            <% hash = @match_up_count[engine][second_engine]
               count = ( hash[engine] + hash[second_engine] )
               second_victory_rate = hash[second_engine].to_f / count 
            %>
              <dl class="dl-horizontal">
                <dt>total</dt><dd><%= hash["count"] %></dd>
                <dt class="small">tie</dt><dd class="small"><%= hash["tie_count" ] %></dd>
                <dt class="small"><%= second_engine %> win: </dt><dd class="small"> <%= hash[second_engine] %></dd>
                <dt class="small"><%= engine %> win:</dt><dd class="small"> <%= hash[engine] %></dd>
                <dt> <%= second_engine %> rate</dt><dd><%= "%.2f" % second_victory_rate %></dd>
                <dt> z value </dt><dd> <%= "%.2f" % one_sample_z_test( second_victory_rate , count ) %></dd> 
              </dl>
                  
            <% end %>
          </td>
        <% end %>
    </tr>
  <% end %>
  
  
  
</table>


<h2>Participants demographic overview</h2>
<table class="table table-striped">
  <tr>
    <th>School</th><th>Status</th><th>count</th>
  <tr>
  
  <% @demographic_overview.each do |row| %>
    <tr>
      <td><%= row["demographic_school"] %></td>
      <td><%= row["demographic_status"] %></td>
      <td><%= row["count"] %></td>
    </tr>
  <% end %>
  
</table>

<h2>Timings (miliseconds)</h2>
<p>Total number of searches done. (More than number of choices above, because
searches can be done and abandoned): <%= @timings.values.collect {|d| d["count"]}.inject(0, :+) %>
</p>
<table class="table table-striped">
  <tr>  
    <th>engine</th>
    <th>count</th>
    <th>mean</th>
    <th>median</th>
    <th>90th percentile</th>
    <th>max</th>
  </tr>
  
  <% @timings.each_pair do |engine, data| %>
  <tr>
    <td><%= engine %></td>
    <td><%= data["count"] %></td>
    <td><%= "%.0f" % data["mean"]  %></td>
    <td><%= data["median"] %></td>
    <td><%= data["percentile90"] %></td>
    <td><%= data["max"] %></td>
  </tr>
  <% end %>
</table>

<h2>Error Count</h2>
<table class="table table-striped">
  <tr><th>engine</th><th>num failed fetches</th></tr>
  <% @errors.each_pair do |engine, count| %>
    <tr><td><%= engine %></td><td><%= count %></td>
  <% end %>
</table>

